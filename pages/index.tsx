import { Box, Button, Flex, VStack, Heading, Text, useToast } from "@chakra-ui/react";
import {
  ClientSafeProvider,
  getProviders,
  getSession,
  signIn
} from "next-auth/client";
import Head from "next/head";
import { useEffect } from "react";
import SplashContent from "../components/SplashContent";

// maxW={[200, 400, 600, 800, 1120]}

export default function Login({
  providers,
}: {
  providers: Record<string, ClientSafeProvider>;
}) {
  const toast = useToast();

  // TODO: de-duplicate with projects/index.tsx
  useEffect(() => {
    const showToast = (type: string, id: number) =>
      toast({
        title: `${type[0].toUpperCase() + type.substr(1)} created.`,
        description: (
          <Text>
            {type === "submission" && "Thanks for choosing Sendy!"}
          </Text>
        ),
        status: "success",
        duration: null,
        isClosable: true, 
      });

    const flashMessage = window.localStorage.getItem("created");
    if (flashMessage) {
      const [type, id] = flashMessage?.split(":");
      showToast(type, +id);
      window.localStorage.removeItem("created");
    }
  }, [toast]);

  const introContent = (
    <Box>
      <Text align="center" fontSize="140%">
        Create magic links that let your friends
        record videos directly into your Google Drive.
        Great for group greeting cards or as a sort
        of &laquo;visual voicemail&raquo;.
      </Text>
      <VStack spacing={2} mt={10}>
        {Object.values(providers).map((provider) => (
          <div key={provider.name}>
            <Button size="lg" colorScheme="teal" onClick={() => signIn(provider.id)}>
              Sign in with {provider.name}
            </Button>
          </div>
        ))}
      </VStack>
    </Box>
  );

  return (
    <div>
      <Head>
        <title>Sendy ✈️ | Video sharing</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex direction="column" width="100vw" height="100vh" background="teal.100" alignItems="center" justifyContent="center">
        <Flex maxW="440px" alignItems="center" mt={-12}>
          <SplashContent content={introContent} />
        </Flex>
      </Flex>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  const session = await getSession(context);
  console.log(session);
  if (session) {
    return {
      redirect: {
        permanent: false,
        destination: "/projects",
      },
    };
  }

  const providers = await getProviders();
  return {
    props: { providers },
  };
}
